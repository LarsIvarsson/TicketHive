
@page "/shopping-cart"
@inject IAppService services
@attribute [Authorize]
@inject AuthenticationStateProvider authStateProvider
@inject ICartService cartService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>Shopping cart</h1>

@if (shoppingCart != null)
{
    if (shoppingCart.Count > 0)
    {


        <table class="table">
            <thead>
                <tr>
                    <th>Event</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in shoppingCart)
                {
                    <tr>
                        <td>
                            <h4>@item.Event.Name</h4>
                            
                        </td>
                        <td>@item.Event.Price</td>
                        <td>
                            <button class="btn btn-primary" @onclick="(() => cartService.DecreaceQuantity(item))">-</button>
                            @item.Quantity
                            <button class="btn btn-primary" @onclick="(() => cartService.IncreaceQuantity(item))">+</button>
                        </td>
                        <td>@(item.Event.Price * item.Quantity)</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" style="text-align: right"><strong>Order Total:</strong></td>
                    <td>@shoppingCart.Sum(item => item.Event.Price * item.Quantity)</td>
                </tr>
       
            </tfoot>
        </table>

    }
    else
    {
        <p>You have emptied your cart.</p>
    }
}
else
{
    <p>Add some events!</p>
}


@code
{
    private List<CartItemsModel>? shoppingCart;

    private string signedInUser;
    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        signedInUser = authState.User.Identity.Name;


        shoppingCart = cartService.GetShoppingCartItem();
    }
}