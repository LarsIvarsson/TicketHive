@page "/home"
@inject IAppService service
@inject ICartService cartService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager;
@attribute [Authorize]

<AuthorizeView Roles="Admin">
	<button type="button" class="btn btn-danger btn-rounded" @onclick='() => navManager.NavigateTo("/admin")'>Go to Admin view</button>
</AuthorizeView>

<div class="text-center padding: 30px;" style="margin: 0px 0px 0px 70px;">
	<h1 class="card-title" style="text-align: center; ">Home Page</h1>
	
	@*SEARCH*@
	<div class="search">
		<input class="search-Input" 
			placeholder="Search event..." 
			style="text-align:center;" 
			type="text" @bind-value="searchWord" />
		<button class="searchButton text-center" @onclick="HandleSearchWord">Search</button>
	<div>
		@if (searchWord == null && errorMessage != null)
		{
			<em class="text-danger">@errorMessage</em>
		}
	</div>
	<hr style="margin: 30px 30px 60px 30px;"/>        
    </div>
	<div class="row" style="margin: 30px;">
        <div class="col-8">            
			<div class="row" style="background-color: white; padding: 30px;" >
                <h3 style="font-size: 2rem;">Your booked events</h3>
				<hr style="margin: 30px 0 20px 0"/>

				@if (shoppingCart is null || shoppingCart.Count == 0)
				{
					<p>No events booked yet...</p>
					<p>Go to <a href="allEvents" style="text-decoration: none;">All events</a> to get tickets for your next event</p>
				}
				else
				{	
					@*VAD SOM PRINTAS OM MAN HAR BOKAT EVENT*@
					@foreach (var item in shoppingCart)
					{
						<div class="col-3 d-flex align-items-center d-flex justify-content-center">

							<img src=/images/Other/RättTicket.png style="height: 120px; width: 120px; align-content: center; "  />
						</div>
						<div class="col-6 text-start d-flex align-items-center">	
							<div>
								<h3 style="font-size: 25px; font-family: Verdana; margin-bottom: 10px;">Event: @item.Event.Name </h3>
								<p style="font-size: 17px; font-family: Verdana; margin-bottom: 10px;">When: @item.Event.Date.ToString("yyyy-MM-dd")</p>
								<p style="font-size: 17px; font-family: Verdana; margin-bottom: 10px;">Tickets: @item.Quantity </p>

							</div>
						</div>
						<div class="col-3 d-flex align-items-center d-flex justify-content-start" style="padding:5px;">
							<img src=/images/Other/Qkod.jpg style="height: 150px; width: 150px; align-content: center;" />
						</div>
					@*<img src=@group.First().ImageUrl style="max-width:250px;"/>*@					
					<hr style="margin: 20px 0 20px 0;" />							
					}					
				}
			</div>
		</div>
		@*PRINTA POPULÄRA EVENT*@
		<div class="col-4" style="background-color: #E0F2FF; padding: 0px 30px 30px 30px;  ">
			<div class="row">
				<h3 style="color: #305076; margin-bottom: 30px; font-size: 25px; font-family: Verdana;">Popular events</h3>				
				<div class="col-1"></div>
				<div class="col-10 text-center">	
					@if (PopularEvents is null)
					{
						<div class="spinner-border"></div>
					}
					else
					{
						@foreach (var e in PopularEvents)
						{
							@if(e.Id > 5 && e.Id <= 10)
							{
								<div>
									<a href="eventDetails/@e.Id" Event="@e">
										<img src="@e.ImageUrl" style="width: 300px; height: 200px;" />
									</a>
									@*<p style="margin-top: 10px; font-size: 15px; font-family: Verdana;">@e.Name</p>*@
									<hr style="background-color: transparent;" />
								</div>
							}
						}
					}
				</div>
				<div class="col-1"></div>
			</div>
		</div>
	</div>
</div>
@*<BlazoredToasts/>*@

<style>
	.card-title {
		font-size: 3.5rem;
		color: #305076;
		margin-bottom: 0.5rem;
		text-transform: uppercase;
		text-align: start;
	}

	.search-Input {
		background-color: transparent;
		border-radius: 10px;
		height: 30px;
		margin: 20px 5px 20px 20px;
		width: 200px;
		/*box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.05);*/
		border: 1px solid #18537a;
		position: relative;
		color: #305076;
		padding-left: 10px;
	}

	.searchButton{
		background-color: #D0E1ED;
		border-radius: 10px;
		height: 30px;
		margin: 20px 20px 20px 5px;
		width: 80px;
		/*box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.05);*/
		border: 1px solid #18537a;
		position: relative;
		color: #305076;
		padding-left: 10px;
	}
</style>

@code {
	private List<EventModel>? PopularEvents;
	private List<IGrouping<int, EventModel>>? groupedList;
	private List<CartItemsModel>? shoppingCart;

	private UserModel? _User { get; set; }
	private AuthenticationState? authState;
	private string? searchWord { get; set; }
	private string? errorMessage { get; set; }

	protected override async Task OnInitializedAsync()
	{
		authState = await authStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;



		if(user != null)
		{
			if (user.Identity!.IsAuthenticated)
			{
<<<<<<< HEAD
				_User = await service.GetUserByUsernameAsync(user.Identity.Name!);
				await GetUserEvents();
				PopularEvents = await service.GetEventsAsync();	
=======
				if (user.Identity!.IsAuthenticated)
				{
					_User = await service.GetUserByUsernameAsync(user.Identity.Name!);	
					shoppingCart = await cartService.GetShoppingCartAsync(_User!.Username);
					//groupedList = shoppingCart.GroupBy(e => e.EventId).Select(grp => grp).ToList();
					//await GetUserEvents();
					PopularEvents = await service.GetEventsAsync();
				}
>>>>>>> master
			}
		}
	}

	private async Task GetUserEvents()
	{
		//// this is to get and sort events from cookie
		//var cookie = await localStorage.GetItemAsync<UserModel>(authState?.User.Identity?.Name);
		//if (cookie is null)
		//{
		//	groupedList = null;
		//}
		//else if (cookie.UserEvents != null)
		//{
		//	groupedList = cookie.UserEvents.GroupBy(e => e.Id).Select(grp => grp).ToList();
		//}
	}

	//protected override void OnParametersSet()
	//{
	//	GetUserEvents();
	//}

	//private void GetUserEvents()
	//{
	//	UserEvents = _User!.UserEvents;
	//}

	private void HandleSearchWord()
	{
		errorMessage = null!;
		if(searchWord != null)
		{
			navManager.NavigateTo($"/allevents/{searchWord}");
		}
		else
		{
			errorMessage = "Please enter a search word before pressing the button...";
		}
	}
}