@page "/confirmation"
@inject IAppService service
@inject ICartService cartService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AuthenticationStateProvider authStateProvider
@attribute [Authorize]

<h2>Your booked events</h2>
<em>Congratulations on buying awesome tickets!</em>
<hr />

@*--- PRINTA VARUKORGEN ---*@
@if (shoppingCart is null)
{
	<p>Confirmation is loading...</p>
}

else
{	
	@foreach (var item in shoppingCart)
	{
		<p>Event: @item.Event.Name</p>
		<p>Qty: @item.Quantity</p>
		<p>Date: @item.Event.Date.ToString("yyyy-MM-dd")</p>
		<hr />
	}
}

@code {
	private List<CartItemsModel>? shoppingCart;
	private AuthenticationState? authState;
	private string? signedInUser;

	/// <summary>
	/// Override method called when the component is initialized asynchronously.
	/// Retrieves the authentication state, signed-in user name, and shopping cart details.
	/// Empties the shopping cart for the signed-in user.
	/// </summary>
	protected override async Task OnInitializedAsync()
	{
		authState = await authStateProvider.GetAuthenticationStateAsync();
		signedInUser = authState.User.Identity!.Name;

		if (signedInUser != null)
		{
			shoppingCart = await cartService.GetShoppingCartAsync(signedInUser!);
			await cartService.EmptyShoppingCartAsync(signedInUser);
		}		
	}
}